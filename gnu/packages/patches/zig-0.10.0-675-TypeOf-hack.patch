From f4392c034ca6fe003e828b8255c635003d4f6c36 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Motiejus=20Jak=C5=A1tys?= <motiejus@jakstys.lt>
Date: Sun, 3 Nov 2024 22:20:13 +0200
Subject: [PATCH] 0.10.0-675-g9d93b2ccf1 @TypeOf hack

---
 lib/std/log.zig     | 4 ++--
 src/link/strtab.zig | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/lib/std/log.zig b/lib/std/log.zig
index 9ebe85c004..f174946565 100644
--- a/lib/std/log.zig
+++ b/lib/std/log.zig
@@ -121,7 +121,7 @@ else
 
 fn log(
     comptime message_level: Level,
-    comptime scope: @Type(.EnumLiteral),
+    comptime scope: @TypeOf(.EnumLiteral),
     comptime format: []const u8,
     args: anytype,
 ) void {
@@ -167,7 +167,7 @@ pub fn defaultLog(
 
 /// Returns a scoped logging namespace that logs all messages using the scope
 /// provided here.
-pub fn scoped(comptime scope: @Type(.EnumLiteral)) type {
+pub fn scoped(comptime scope: @TypeOf(.EnumLiteral)) type {
     return struct {
         /// Log an error message. This log level is intended to be used
         /// when something has gone wrong. This might be recoverable or might
diff --git a/src/link/strtab.zig b/src/link/strtab.zig
index abb58defef..2048aa216e 100644
--- a/src/link/strtab.zig
+++ b/src/link/strtab.zig
@@ -5,7 +5,7 @@ const Allocator = mem.Allocator;
 const StringIndexAdapter = std.hash_map.StringIndexAdapter;
 const StringIndexContext = std.hash_map.StringIndexContext;
 
-pub fn StringTable(comptime log_scope: @Type(.EnumLiteral)) type {
+pub fn StringTable(comptime log_scope: @TypeOf(.EnumLiteral)) type {
     return struct {
         const Self = @This();
 
-- 
2.44.1

